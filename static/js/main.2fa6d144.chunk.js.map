{"version":3,"sources":["logo/index-head.png","components/header.js","components/card.js","components/copy.js","utils/useCopy.js","utils/useMultiFetch.ts","components/list-info.js","components/search.js","utils/getChainId.ts","components/list-tokens.js","pages/list.js","components/hero.js","components/allLists.js","pages/home.js","pages/why.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","header","Nav","nav","ButtonLink","a","Header","back","style","display","alignItems","to","width","src","logo","alt","className","marginLeft","href","target","rel","filter","marginRight","color","StyledCard","Link","TokensListed","span","NameText","h3","Card","logoURI","id","list","name","actualName","logoURL","startsWith","split","onError","e","tokens","length","CopyIcon","div","TransactionStatusText","theme","flexRowNoWrap","CopyHelper","toCopy","timeout","useState","isCopied","setIsCopied","staticCopy","useCallback","text","didCopy","copy","useEffect","hide","setTimeout","clearTimeout","useCopyClipboard","setCopied","onClick","size","stroke","getListURLFromListID","listID","endsWith","Error","useMultiFetch","listIDs","lists","setLists","stale","forEach","fetch","then","response","ok","json","catch","error","console","useMemo","reduce","accumulator","loading","undefined","StyledInfo","section","InfoDescription","Helper","Info","fontWeight","fromNow","timestamp","version","major","minor","patch","StyledSearch","form","Search","handleChange","value","setValue","pointerEvents","position","placeholder","type","onChange","cursor","opacity","typedList","TokenItem","TokenInfo","TokenIcon","img","TokenTagWrapper","TokenTag","TokenAddress","Chain","ListItem","memo","chainId","token","scanner","lookupScanner","tokenAddress","toChecksumAddress","address","scannerUrl","textAlign","symbol","tags","toUpperCase","slice","Title","h1","TokenWrapper","ListWrapper","ListTitle","ListHeader","Tokens","sortedTokens","sort","b","data","renderResults","results","map","i","key","Content","Loading","List","window","scrollTo","search","useLocation","URLSearchParams","get","Hero","fontSize","lineHeight","Object","keys","tokenLists","StyledAllLists","CardWrapper","AddButton","button","AllLists","result","Home","marginTop","marginBottom","Boolean","location","hostname","match","ReactDOM","render","StrictMode","exact","path","component","Why","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2fa6d144.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/index-head.d9406d39.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport logo from '../logo/index-head.png'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 1rem;\n  box-sizing: border-box;\n  position: sticky;\n  top: 0;\n  backdrop-filter: blur(20px);\n  z-index: 999;\n  background-color: rgba(255, 255, 255, 0.01);\n  border-bottom: 0.75px solid #13131320;\n\n  a {\n    color: #0f0f0f;\n  }\n  .title {\n    font-size: 1.25rem;\n    font-family: 'MatterSQ-SemiBold';\n  }\n\n  @media screen and (max-width: 640px) {\n    position: relative;\n  }\n`\n\nconst Nav = styled.nav`\n  display: inline-flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 1rem;\n  width: fit-content;\n\n  > * {\n    margin-left: 1rem;\n  }\n`\n\nconst ButtonLink = styled.a`\n  transition: box-shadow 0.25s ease, translate 0.25s ease;\n  background-color: #010101;\n  border-radius: 8px;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.65rem;\n  color: white;\n  font-size: 14px;\n  scale: 1;\n  :hover {\n    box-shadow: -6px 6px 0px #d6fdff;\n    translate: 1px -1px;\n  }\n`\n\nexport default function Header({ back }) {\n  return (\n    <StyledHeader>\n      <Link style={{ display: 'flex', alignItems: 'center' }} to=\"/\">\n        <img width={32} src={logo} alt=\"logo\" />\n        <span className=\"title\" style={{ marginLeft: '.5rem' }}>\n\t  <a href=\"https://www.dogelonindex.org\">\n          Dogelon Index\n\t  </a>\n        </span>\n      </Link>\n\n      <Nav>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"hide-small\" href=\"https://t.me/dogelonindex\">\n          Community\n        </a>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"hide-small\"\n          href=\"https://uniswap.org/blog/token-lists/\"\n        >\n          Why lists?\n        </a>\n        <a\n          className=\"hide-small\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/Uniswap/token-lists#authoring-token-lists\"\n        >\n          Make a list\n        </a>\n\n        <ButtonLink\n          className=\"button\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/indexdevteam/tokenlists-org\"\n        >\n          <img\n            style={{\n              filter: 'invert(1)',\n              width: 16,\n              marginRight: 8,\n            }}\n            src=\"https://raw.githubusercontent.com/feathericons/feather/master/icons/github.svg\"\n            alt=\"github icon\"\n          />\n          <span style={{ color: 'white' }}>GitHub</span>\n        </ButtonLink>\n      </Nav>\n    </StyledHeader>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledCard = styled(Link)`\n  border-radius: 8px;\n  padding: 1.5rem;\n  max-width: 172px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  transition: box-shadow 0.25s ease, translate 0.25s ease;\n  scale: 1;\n  background-color: white;\n  text-decoration: none;\n  color: #0f0f0f;\n  border: 0.75px solid #131313;\n  box-shadow: -8px 8px 0px #d6fdff;\n\n  @media screen and (max-width: 960px) {\n    max-width: initial;\n  }\n  @media screen and (max-width: 414px) {\n    width: 320px;\n    box-sizing: border-box;\n  }\n  :hover {\n    box-shadow: -12px 12px 0px #d6fdff;\n    translate: 2px -2px;\n  }\n\n  h3 {\n    font-size: 24px;\n    line-height: 150%;\n  }\n\n  a {\n    color: #0f0f0f;\n    text-decoration: none;\n  }\n\n  img {\n    max-width: 64px;\n    width: fit-content;\n    margin-bottom: 2rem;\n  }\n`\n\nconst TokensListed = styled.span`\n  font-size: 14px;\n  line-height: 150%;\n`\n\nconst NameText = styled.h3`\n  word-wrap: break-word;\n`\n\nfunction getLogoURL(logoURI) {\n  if (logoURI?.startsWith('ipfs://')) {\n    return `https://ipfs.io/ipfs/${logoURI.split('//')[1]}`\n  } else if (typeof logoURI === 'string') {\n    return logoURI\n  } else {\n    return null\n  }\n}\n\nexport default function Card({ id, list, name }) {\n  const actualName = list?.name ?? name // use the name from the list, falling back to the optional prop if necessary\n  const logoURL = getLogoURL(list?.logoURI ?? null)\n\n  return (\n    <StyledCard to={`/token-list?url=${id}`} className=\"card\">\n      <img\n        alt=\"icon\"\n        src={logoURL ?? 'https://raw.githubusercontent.com/feathericons/feather/master/icons/help-circle.svg'}\n        onError={(e) => {\n          e.target.className = 'replace'\n          e.target.src = 'https://raw.githubusercontent.com/feathericons/feather/master/icons/help-circle.svg'\n        }}\n      />\n      <section>\n        <NameText>{actualName}</NameText>\n        <TokensListed>\n          {list?.tokens?.length > 0 ? `${list.tokens.length} tokens` : list === null ? 'Error' : 'Loading...'}\n        </TokensListed>\n      </section>\n    </StyledCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../utils/useCopy'\nimport { CheckCircle, Copy } from 'react-feather'\n\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  display: inline-block;\n  text-decoration: none;\n  width: fit-content;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <CheckCircle size={'14'} stroke=\"black\" />\n          {/* <TransactionStatusText>Copied</TransactionStatusText> */}\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <Copy size={'14'} stroke=\"black\" />\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n","import { useState, useEffect, useCallback } from 'react'\nimport copy from 'copy-to-clipboard'\n\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n","import { useState, useEffect, useMemo } from 'react'\n\ninterface ListReturn {\n  list: any | undefined | null // TODO replace any\n  loading: boolean\n  error: boolean\n}\n\nexport function getListURLFromListID(listID: string): string {\n  if (listID.startsWith('https://')) {\n    return listID\n  } else if (listID?.endsWith('.eth')) {\n    // proxy http urls through a CF worker\n    return `https://wispy-bird-88a7.uniswap.workers.dev/?url=${`http://${listID}.link`}`\n  } else {\n    throw Error(`Unrecognized listId ${listID}`)\n  }\n}\n\nexport function useMultiFetch(listIDs: string[] = []): { [listID: string]: ListReturn } {\n  const [lists, setLists] = useState<{ [url: string]: ListReturn['list'] }>({})\n\n  useEffect(() => {\n    if (listIDs.length > 0) {\n      let stale = false\n\n      listIDs.forEach((listID) =>\n        fetch(getListURLFromListID(listID))\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok')\n            }\n            return response.json()\n          })\n          .then((list) => {\n            if (!stale) {\n              setLists((lists) => ({ ...lists, [listID]: list }))\n            }\n          })\n          .catch((error) => {\n            if (!stale) {\n              console.error(`Failed to fetch ${listID} at ${getListURLFromListID(listID)}`, error)\n              setLists((lists) => ({ ...lists, [listID]: null }))\n            }\n          })\n      )\n\n      return () => {\n        stale = true\n        setLists({})\n      }\n    }\n  }, [listIDs])\n\n  return useMemo(\n    () =>\n      listIDs.reduce((accumulator: { [listID: string]: ListReturn }, listID) => {\n        const list = lists[listID]\n        const loading = list === undefined\n        const error = list === null\n        return { ...accumulator, [listID]: { list, loading, error } }\n      }, {}),\n    [listIDs, lists]\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Card from './card'\nimport Moment from 'react-moment'\nimport CopyHelper from './copy'\nimport { getListURLFromListID } from '../utils/useMultiFetch'\n\nconst StyledInfo = styled.section`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 2rem;\n  max-width: 960px;\n  box-sizing: border-box;\n  padding: 3rem 0;\n  min-height: 400px;\n  position: sticky;\n  top: 3rem;\n  height: 400px;\n\n  small {\n    font-size: 16px;\n    line-height: 150%;\n    color: #131313;\n  }\n\n  @media screen and (max-width: 960px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    position: relative;\n    align-items: flex-start;\n    min-height: initial;\n    top: initial;\n    margin-top: 2rem;\n    height: fit-content;\n    padding: 0;\n  }\n\n  @media screen and (max-width: 414px) {\n    grid-template-columns: max-content;\n    width: 100%;\n    max-width: 320px;\n    overflow: hidden;\n  }\n`\n\nconst InfoDescription = styled.span`\n  display: grid;\n  grid-gap: 1rem;\n  font-size: 1rem;\n  max-width: 260px;\n  span p {\n    margin: 0.25rem 0;\n    color: #797878;\n  }\n\n  @media screen and (max-width: 960px) {\n    max-width: initial;\n    max-width: 260px;\n  }\n`\n\nconst Helper = styled.div`\n  padding: 0.5rem;\n  background-color: #d6fdff;\n  color: rgba(0, 0, 0);\n  border-radius: 8px;\n  font-size: 14px;\n`\n\nexport default function Info({ listID, list }) {\n  return (\n    <StyledInfo>\n      <Card id={listID} list={list} />\n      <InfoDescription>\n        <span className=\"grid\">\n          <small style={{ fontWeight: 600 }}>\n            Source <CopyHelper toCopy={listID} />\n          </small>\n          <span>\n            <a href={getListURLFromListID(listID)}>{listID}</a>\n          </span>\n        </span>\n\n        <Helper>Copy to import this list anywhere Token Lists are supported.</Helper>\n\n        <span>\n          <small>Last Updated</small>\n          <p>\n            <Moment fromNow>{list && list.timestamp}</Moment>\n          </p>\n        </span>\n        <span>\n          <small>Version</small>\n          <p>{`${list.version.major}.${list.version.minor}.${list.version.patch}`}</p>\n        </span>\n      </InfoDescription>\n    </StyledInfo>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Search as SearchIcon, X } from 'react-feather'\n\nconst StyledSearch = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  input {\n    border: none;\n    background-color: transparent;\n    border: 0.5px solid #838383;\n    font-size: 14px;\n    text-align: left;\n    padding: 8px;\n    padding-left: 2rem;\n    width: 164px;\n\n    border: 0.5px solid #838383;\n    border-radius: 8px;\n  }\n  @media screen and (max-width: 414px) {\n    width: 100%;\n\n    input {\n      width: 100%;\n    }\n  }\n\n  input:focus {\n    background-color: white;\n  }\n`\n\nexport default function Search({ handleChange, value, setValue }) {\n  return (\n    <StyledSearch className=\"search\">\n      <SearchIcon\n        color={'#838383'}\n        style={{\n          marginLeft: '8px',\n          pointerEvents: 'none',\n          position: 'absolute',\n        }}\n        size={16}\n      />\n      <input placeholder=\"Search\" type=\"text\" value={value} onChange={(e) => handleChange(e)} />\n\n      {value !== '' ? (\n        <X\n          style={{\n            marginLeft: '-24px',\n            cursor: 'pointer',\n          }}\n          onClick={() => setValue('')}\n          size={20}\n        />\n      ) : (\n        <X\n          style={{\n            marginLeft: '-24px',\n            cursor: 'pointer',\n            opacity: 0,\n          }}\n          onClick={() => setValue('')}\n          size={20}\n        />\n      )}\n    </StyledSearch>\n  )\n}\n","//TODO: Should probably make this dynamic\n// const list =  require(\"./chain_list.json\"); \nimport list from \"./chain_list.json\"; \nconst typedList : any = list; \n\nexport function lookUpchain(chainId: string) {\n    return typedList[chainId] || chainId; \n}\n\nexport function lookupScanner(chainId: number) {\n    switch(chainId) {\n        // Mainnet\n        case 1: \n            return \"https://etherscan.io/address/\"; \n        // Polygon\n        case 137: \n            return \"https://polygonscan.com/address/\"; \n        // Rinkeby\n        case 4:\n            return \"https://rinkeby.etherscan.io/address/\"; \n        // Kovan\n        case 42: \n            return \"https://kovan.etherscan.io/address/\"; \n        // goerli\n        case 420: \n            return \"https://goerli.etherscan.io/address/\"; \n        // ropsten\n        case 3: \n            return \"https://ropsten.etherscan.io/address/\"; \n        // arbitrum\n        case 42161: \n            return \"https://arbiscan.io/address/\"; \n        // Optimism\n        case 10:\n            return \"https://optimistic.etherscan.io/address/\";\n        // Optimistic Kovan\n        case 69: \n            return \"https://kovan-optimistic.etherscan.io/address/\"\n        // Binance Smart Chain\n        case 56: \n            return \"https://bscscan.com/address/\"\n        // Ethereum Classic\n        case 61: \n            return \"https://blockscout.com/etc/mainnet/address/\"\n        // Gnosis Chain\n        case 100: \n            return \"https://gnosisscan.io/address/\"\n        // Kucoin Community Chain\n        case 321: \n            return \"https://scan.kcc.io/address/\"\n        // Dogechain\n        case 2000: \n            return \"https://explorer.dogechain.dog/address/\"\n        // EthereumPow\n        case 10001: \n            return \"https://www.oklink.com/en/ethw/address/\"\n        // Avalanche\n        case 43114: \n            return \"https://snowtrace.io/address/\"\n        // Harmony\n        case 1666600000: \n            return \"https://explorer.harmony.one/address/\"\n        default:\n            return \"\" ;\n    }\n}\n","import React, { useState, memo } from 'react'\nimport styled from 'styled-components'\nimport Search from './search'\nimport CopyHelper from './copy'\nimport { lookUpchain, lookupScanner } from '../utils/getChainId'\n\nimport { toChecksumAddress } from 'ethereumjs-util'\nimport FilterResults from 'react-filter-search'\n\nconst TokenItem = styled.section`\n  display: grid;\n  max-width: 960px;\n  grid-gap: 1rem;\n  grid-template-columns: 1fr 100px 120px 96px 148px;\n  margin-bottom: 1rem;\n  a {\n    color: #131313;\n  }\n\n  @media screen and (max-width: 960px) {\n    display: grid;\n    max-width: 960px;\n    grid-gap: 1rem;\n    grid-template-columns: 24px 96px 1fr;\n    margin-bottom: 1rem;\n  }\n\n  @media screen and (max-width: 360px) {\n    grid-template-columns: 24px 96px 150px;\n  }\n`\nconst TokenInfo = styled.span`\n  display: grid;\n  grid-template-columns: 16px 1fr;\n  grid-gap: 1rem;\n  height: fit-content;\n  align-items: center;\n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nconst TokenIcon = styled.img`\n  width: 16px;\n  border-radius: 32px;\n  background-color: white;\n  height: 16px;\n`\nconst TokenTagWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media screen and (max-width: 960px) {\n    display: none;\n  }\n`\n\nconst TokenTag = styled.div`\n  font-size: 11px;\n  background-color: rgb(230, 230, 230, 0.4);\n  color: #858585;\n  padding: 0.25rem 0.35rem;\n  margin-right: 0.2rem;\n  border-radius: 4px;\n  height: 14px;\n  width: fit-content;\n`\n\nconst TokenAddress = styled.span`\n  display: grid;\n  grid-template-columns: auto 16px;\n  grid-gap: 0.5rem;\n  height: fit-content;\n  align-items: center;\n`\n\nconst Chain = styled.span`\n  display: grid;\n  grid-template-columns: auto 16px;\n  grid-gap: 0.5rem;\n  height: fit-content;\n  align-items: center;\n  @media screen and (max-width: 960px) {\n    display: none;\n  }\n`\n\nexport const ListItem = memo(function ListItem({ token }) {\n  const scanner = lookupScanner(token.chainId); \n  const tokenAddress = toChecksumAddress(token.address); \n  const scannerUrl = scanner == \"\" ? \"\" : scanner + tokenAddress; \n  return (\n    <TokenItem>\n      <TokenInfo>\n        <TokenIcon\n          className=\"token-icon\"\n          alt={`${token.name} token icon`}\n          src={\n            !token.logoURI\n              ? `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${toChecksumAddress(\n                  token.address\n                )}/logo.png`\n              : token.logoURI.startsWith('ipfs')\n              ? `https://gateway.pinata.cloud/ipfs/${token.logoURI.split('//')[1]}`\n              : token.logoURI.startsWith('ipfs')\n              ? `https://ipfs.io/ipfs/${token.logoURI.split('//')[1]}`\n              : token.logoURI\n          }\n          onError={(e) => {\n            e.target.className = 'replace'\n            e.target.src = 'https://raw.githubusercontent.com/feathericons/feather/master/icons/help-circle.svg'\n          }}\n        />\n\n        <span className=\"hide-small\">\n          <a style={{ textAlign: 'right' }} href={scannerUrl}>\n            {token.name}\n          </a>\n        </span>\n      </TokenInfo>\n      <Chain>{lookUpchain(token.chainId)}</Chain>\n      <span>{token.symbol}</span>\n      <TokenTagWrapper className=\"hide-small\">\n        {token?.tags?.length > 0 && (\n          <>\n            <TokenTag>{token.tags[0].toUpperCase()}</TokenTag>\n            {token.tags.length > 1 && <TokenTag>...</TokenTag>}\n          </>\n        )}\n      </TokenTagWrapper>\n      <TokenAddress>\n        <a style={{ textAlign: 'right' }} href={scannerUrl}>\n          {`${tokenAddress?.slice(0, 6)}...${tokenAddress?.slice(38, 42)}`}\n        </a>\n        <CopyHelper toCopy={token.address} />\n      </TokenAddress>\n    </TokenItem>\n  )\n})\n\nconst Title = styled.h1`\n  font-size: 48px;\n  line-height: 125%;\n  @media screen and (max-width: 960px) {\n  }\n`\n\nconst TokenWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 960px;\n  width: 100%;\n  height: fit-content;\n  min-height: 60vh;\n  margin-bottom: 2rem;\n`\n\nconst ListWrapper = styled.section`\n  @media screen and (max-width: 414px) {\n  }\n`\n\nconst ListTitle = styled.div`\n  font-weight: 500;\n  color: #1f1f1f80;\n  display: grid;\n  max-width: 960px;\n  grid-gap: 1rem;\n  grid-template-columns: 1fr 100px 120px 96px 148px;\n  margin-bottom: 1rem;\n  @media screen and (max-width: 414px) {\n    display: none;\n  }\n`\n\nconst ListHeader = styled.div`\n  display: flex;\n  align-items: baseline;\n  @media screen and (max-width: 640px) {\n    flex-direction: column;\n    margin-bottom: 2rem;\n  }\n`\n\nexport default function Tokens({ tokens }) {\n  const [value, setValue] = useState('')\n  const sortedTokens = tokens.sort((a,b) =>{ \n    return a.symbol > b.symbol ? 1 : \n      a.symbol < b.symbol ? -1 : 0; \n  })\n\n  function handleChange(e) {\n    const { value } = e.target\n    setValue(value)\n  }\n\n  return (\n    <ListWrapper>\n      <ListHeader className=\"flex-between\" style>\n        <Title>List Tokens</Title>\n        <Search handleChange={handleChange} value={value} setValue={setValue} />\n      </ListHeader>\n\n      <TokenWrapper>\n        <ListTitle>\n          <p className=\"hide-small\">Name</p>\n          <p className=\"hide-small\">Chain</p>\n          <p className=\"hide-small\">Symbol</p>\n          <p className=\"hide-small\">Tags</p>\n          <p className=\"hide-small\" style={{ textAlign: 'right' }}>\n            Address\n          </p>\n        </ListTitle>\n\n        <FilterResults\n          value={value}\n          data={sortedTokens}\n          renderResults={(results) =>\n            results.length === 0 ? 'None found!' : results.map((data, i) => <ListItem key={i} token={data} />)\n          }\n        />\n      </TokenWrapper>\n    </ListWrapper>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Header from '../components/header'\nimport Info from '../components/list-info'\nimport Tokens from '../components/list-tokens'\nimport { useMultiFetch } from '../utils/useMultiFetch'\n\nimport { useLocation } from 'react-router-dom'\n\nimport '../index.css'\n\nconst Content = styled.section`\n  display: grid;\n  grid-template-columns: 300px 800px;\n  grid-gap: 48px;\n  position: relative;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    grid-gap: 24px;\n    padding: 0 1.5rem;\n  }\n`\n\nconst Loading = styled.div`\n  height: 360px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport function getURLFromQuery(query) {\n  if (query?.startsWith('https://')) {\n    return query\n  } else if (query?.endsWith('.eth')) {\n    return `http://${query}.link`\n  } else {\n    return null\n  }\n}\n\nfunction List() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const search = useLocation()?.search\n  const listID = useMemo(() => new URLSearchParams(search).get('url'), [search])\n  const listIDs = useMemo(() => [listID], [listID])\n  const { list, loading, error } = useMultiFetch(listIDs)[listID]\n\n  return (\n    <div className=\"app\">\n      <Header back={true} />\n      {!!!listID ? (\n        <Loading>Invalid URL</Loading>\n      ) : error ? (\n        <Loading>\n          <p>Sorry, we're having trouble loading this list.</p>\n          <code>{listID}</code>\n        </Loading>\n      ) : loading ? (\n        <Loading>\n          <p>Loading...</p>\n        </Loading>\n      ) : (\n        <Content>\n          <Info listID={listID} list={list} />\n          <Tokens tokens={list.tokens} />\n        </Content>\n      )}\n    </div>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 6rem;\n  position: sticky;\n  top: 10rem;\n  height: fit-content;\n\n  p {\n    text-align: left;\n    max-width: 400px;\n    font-size: 18px;\n  }\n\n  .title {\n    text-align: left;\n    max-width: 450px;\n    font-size: 48px;\n    line-height: 125%;\n    letter-spacing: 0.002em;\n    color: #1f1f1f;\n    margin: 0;\n    font-family: 'MatterSQ-Medium';\n  }\n\n  .icon {\n    width: 48px;\n  }\n\n  .list {\n    max-width: 960px;\n  }\n\n  a {\n    color: #131313;\n    font-family: 'MatterSQ-SemiBold';\n  }\n\n  .index {\n    color: #1f1f1f;\n    font-family: 'MatterSQ-Regular';\n  }\n\n  @media screen and (max-width: 960px) {\n    position: relative;\n    top: initial;\n    margin-top: 2rem;\n\n    .title {\n      font-size: 35px;\n    }\n  }\n`\n\nconst HoverLink = styled.a`\n  transition: box-shadow 0.25s ease, translate 0.25s ease;\n  margin-top: 0.5rem;\n  width: fit-content;\n  :hover {\n    box-shadow: -6px 6px 0px #d6fdff;\n    translate: 1px -1px;\n  }\n`\n\nexport default function Header() {\n  return (\n    <Hero>\n      <p className=\"title\">Our *RC-20 token lists.</p>\n\n      <p style={{ fontSize: '20px', lineHeight: '150%' }} className=\"description\" id=\"why-lists\">\n        Token Lists is a community-led initiative to improve discoverability, reputation and trust in *RC20 token lists\n        in a manner that is inclusive, transparent, and decentralized.\n      </p>\n      <p style={{ fontSize: '20px', lineHeight: '150%' }} className=\"description\" id=\"why-lists\">\n        Here you can find our curated token lists for Dogelon Index and Dogelon Mars contracts.\n      </p>\n    </Hero>\n  )\n}\n","import React, { useState, useMemo } from 'react'\nimport styled from 'styled-components'\nimport FilterResults from 'react-filter-search'\n\nimport Card from './card'\nimport Search from './search'\nimport tokenLists from '../token-lists.json'\nimport { useMultiFetch } from '../utils/useMultiFetch'\n// import { ListItem } from '../components/list-tokens'\n// import { toChecksumAddress } from 'ethereumjs-util'\n\nconst listIDs = Object.keys(tokenLists)\n\nconst StyledAllLists = styled.section`\n  min-height: 80vh;\n  width: 100%;\n  padding: 5rem 0 6rem 0;\n  display: grid;\n  gap: 24px;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: fit-content;\n  @media screen and (max-width: 960px) {\n    padding: 0;\n    align-items: flex-start;\n  }\n`\n\nconst CardWrapper = styled.div`\n  display: grid;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  max-width: 720px;\n  min-width: 720px;\n  grid-gap: 1.5rem;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  @media screen and (max-width: 960px) {\n    max-width: initial;\n    min-width: initial;\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media screen and (max-width: 414px) {\n    display: flex;\n    flex-wrap: wrap;\n    max-width: initial;\n    min-width: initial;\n    grid-template-columns: 1fr;\n  }\n`\n\nconst AddButton = styled.button`\n  cursor: pointer;\n  border: 0.75px solid #131313;\n  width: 100%;\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: transparent;\n  border-radius: 8px;\n\n  a {\n    color: #1f1f1f;\n  }\n`\n\nexport default function AllLists() {\n  const [value, setValue] = useState('')\n\n  function handleChange(e) {\n    const { value } = e.target\n    setValue(value)\n  }\n\n  // fetch lists\n  const lists = useMultiFetch(listIDs)\n\n  // format list data for search, using names from fetched lists if available, while falling back to hard-coded names\n  const data = useMemo(\n    () => listIDs.map((listID) => ({ id: listID, name: lists[listID].list?.name ?? tokenLists[listID].name })),\n    [lists]\n  )\n\n  // // the below is a naive way to get all tokens in all lists, unique by address\n  // const allTokensByListID = useMemo(\n  //   () =>\n  //     Object.keys(lists).map((listID) => {\n  //       const list = lists[listID]?.list\n  //       const tokensInList = (list?.tokens ?? []).reduce(\n  //         (accumulator, token) => ({ ...accumulator, [toChecksumAddress(token.address)]: token }),\n  //         {}\n  //       )\n  //       return tokensInList\n  //     }),\n  //   [lists]\n  // )\n  // const allTokens = useMemo(\n  //   () =>\n  //     Object.keys(allTokensByListID).reduce(\n  //       (accumulator, listID) => ({ ...accumulator, ...allTokensByListID[listID] }),\n  //       {}\n  //     ),\n  //   [allTokensByListID]\n  // )\n  // const tokenData = useMemo(\n  //   () =>\n  //     Object.keys(allTokens).map((tokenAddress) => ({\n  //       address: tokenAddress,\n  //       name: allTokens[tokenAddress]?.name ?? '',\n  //       symbol: allTokens[tokenAddress]?.symbol ?? '',\n  //     })),\n  //   [allTokens]\n  // )\n\n  return (\n    <StyledAllLists>\n      <Search handleChange={handleChange} value={value} setValue={setValue} />\n\n      {/* <h1>Lists</h1> */}\n\n      <CardWrapper>\n        <FilterResults\n          value={value}\n          data={data}\n          renderResults={(results) =>\n            results.length === 0\n              ? 'None found!'\n              : results.map((result) => (\n                  <Card key={result.id} id={result.id} list={lists[result.id]?.list} name={result.name} />\n                ))\n          }\n        />\n      </CardWrapper>\n\n      {/* {value?.length > 2 && (\n        <>\n          <h1>Tokens</h1>\n\n          <FilterResults\n            value={value}\n            data={tokenData}\n            renderResults={(results) =>\n              results.length === 0\n                ? 'None found!'\n                : results.map((data) => <ListItem key={data.address} token={allTokens[data.address]} />)\n            }\n          />\n        </>\n      )} */}\n\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/indexdevteam/tokenlists-org/issues/new?assignees=&labels=list-request&template=add-list-request.md&title=Request%3A+add+%7BList+name%7D\"\n      >\n        <AddButton>+ add a list</AddButton>\n      </a>\n    </StyledAllLists>\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Header from '../components/header'\nimport Hero from '../components/hero'\nimport AllLists from '../components/allLists'\n\nimport '../index.css'\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 460px 1fr;\n  grid-gap: 48px;\n  position: relative;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: 1fr;\n    padding: 1rem;\n    width: 100%;\n  }\n`\n\nfunction Home() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Content>\n        <Hero />\n        <AllLists />\n      </Content>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useEffect } from 'react'\nimport Header from '../components/header'\n\nimport '../index.css'\n\nfunction Home() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"home-content\">\n        <div>\n          <section className=\"hero\">\n            <small style={{ marginTop: '4rem', marginBottom: '1rem' }}>Maintained by Index Dev Team</small>\n            <p className=\"title\">Why tokens lists?</p>\n\n            <p className=\"description\" id=\"why-lists\">\n              Token Lists aim to solve the problem of the ERC-20 community creating, discovering and maintaining lists\n              of reputable tokens in a way that is inclusive, transparent, decentralized and open source.\n            </p>\n            <h2>Enter Token lists</h2>\n            <p>\n              The goal of Token Lists is to enable trust to emerge around reputable tokens in a way that is aligned with\n              the values of decentralization.\n            </p>\n            <p>\n              Token Lists is a json schema standard that enables exactly this. Projects can encode lists of\n              reputable tokens in a machine readable way. Anyone can make a list. These lists can then be imported into\n              a swap interface.\n            </p>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport List from './pages/list'\nimport Home from './pages/home'\nimport Why from './pages/why'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/token-list\" component={List} />\n      <Route path=\"/why\" component={Why} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}